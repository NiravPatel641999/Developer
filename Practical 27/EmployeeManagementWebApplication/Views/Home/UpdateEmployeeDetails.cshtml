@model EmployeeManagementCommonHelper.ViewModel.EmployeeDetails

@{
    ViewBag.Title = "UpdateEmployeeDetails";
}

<h2>UpdateEmployeeDetails</h2>


@using (Html.BeginForm("UpdateEmployeeDetails", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmployeeDetails</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- @Html.EditorFor(model => model.DesignationId, new { htmlAttributes = new { @class = "form-control" } }) -->
                @*@Html.EditorFor(model => model.DesignationId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.DesignationId, new SelectList(Model.DesignationList, "Value", "Text"), new { @class = "form-control", @id = "Designation" })
                @*@Html.DropDownList("Designation", ViewBag.DesignationList as SelectList, "Select Designation", new { @class = "form-control"})*@
                @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicturePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProfilePicturePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProfilePicturePath, "", new { @class = "text-danger" })*@
                <img src="~/Image/@ViewBag.FileName" style="width:50px;height:50px;" />
                <input type="file" name="ImageFile" required id="FileName" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @id = "Salary" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @id = "DateofBirth"} })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "adderess" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" id="btnSave" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
            $('#btnSave').prop("disabled", false);
            $('#Email, #adderess,#DateofBirth,#Salary,#Designation,#Name').change(function () {
                if ($('#adderess').val().length > 0 &&
                    $('#Email').val().length > 0 &&
                    $('#DateofBirth').val().length > 0 &&
                    $('#Salary').val().length > 0 &&
                    $('#Name').val().length > 0 &&
                    $("#Designation option:selected").text() != 'Select Designation') {
                    $('#btnSave').prop("disabled", false);
                }
                else {
                    $('#btnSave').prop("disabled", true);
                }
            });
        });
    </script>

    <style scoped>
        .ui-datepicker-header ui-widget-header ui-helper-clearfix ui-corner-all, ui-datepicker-calendar {
            position: absolute;
            top: 367.797px;
            left: 868.5px;
            z-index: 1;
        }

        .ui-datepicker-year {
            margin-left: 10px;
        }
    </style>

}

